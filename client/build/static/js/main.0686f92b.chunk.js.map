{"version":3,"sources":["reducers/index.js","reducers/mealReducer.js","actions/actionTypes.js","apis/mealDB.js","Components/GetMeal.js","actions/index.js","Components/Header.js","Components/Meal.js","Components/App.js","index.js"],"names":["combineReducers","randomMeal","state","action","type","payload","axios","create","baseURL","process","connect","fetchRandomMeal","dispatch","a","mealDB","get","res","data","meals","props","className","style","textAlign","onClick","href","ingredients","i","push","title","strMeal","category","strCategory","area","strArea","thumbnail","strMealThumb","tags","strTags","instructions","strInstructions","youtube","strYoutube","alt","src","map","ingredient","key","data-label","data-labe","split","tag","Header","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.0686f92b.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport mealReducer from \"./mealReducer\";\r\n\r\nexport default combineReducers({\r\n  randomMeal: mealReducer\r\n});\r\n","import { FETCH_RANDOM_MEAL } from \"../actions/actionTypes\";\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case FETCH_RANDOM_MEAL:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const FETCH_RANDOM_MEAL = \"FETCH_RANDOM_MEAL\";\r\n","import axios from \"axios\";\r\n\r\n/**\r\n * The test api with api key 1 for deveolpement from themealdb.com\r\n */\r\n\r\nconst key = process.env.REACT_APP_MEALDB_API_KEY;\r\n\r\nexport default axios.create({\r\n  baseURL: `https://www.themealdb.com/api/json/v2/${key}`\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchRandomMeal } from \"../actions\";\r\n\r\nconst GetMeal = props => {\r\n  return (\r\n    <div className=\"ui center aligned header\">\r\n      <h2 className=\"ui center aligned icon header\">\r\n        <i className=\"clock outline icon\" />\r\n        Are you Hungry?\r\n      </h2>\r\n      <button\r\n        style={{ textAlign: \"center\" }}\r\n        onClick={() => props.fetchRandomMeal()}\r\n        className=\"ui center aligned primary button\"\r\n      >\r\n        Random Meal\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { fetchRandomMeal }\r\n)(GetMeal);\r\n","import { FETCH_RANDOM_MEAL } from \"./actionTypes\";\r\nimport mealDB from \"../apis/mealDB\";\r\n\r\nexport const fetchRandomMeal = () => async dispatch => {\r\n  const res = await mealDB.get(\"/random.php\");\r\n  dispatch({\r\n    type: FETCH_RANDOM_MEAL,\r\n    payload: res.data.meals[0]\r\n  });\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"ui secondary pointing menu\">\r\n      <a href=\"#\" className=\"item\">\r\n        Random Meal Generator\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Meal = props => {\r\n  return (\r\n    <div>\r\n      <img\r\n        alt={props.strMeal}\r\n        className=\"ui fluid image\"\r\n        src={props.strMealThumb}\r\n      />\r\n      <div className=\"ui four column grid\">\r\n        <div className=\"two column row\">\r\n          <div className=\"column\">\r\n            <h2 className=\"ui header\">{props.title}</h2>\r\n            {props.category}\r\n          </div>\r\n        </div>\r\n        <div className=\"two column row\">\r\n          <div className=\"column\">\r\n            <img\r\n              alt={props.strMeal}\r\n              className=\"ui large rounded image\"\r\n              src={props.thumbnail}\r\n            ></img>\r\n          </div>\r\n          <div className=\"column\">\r\n            <table className=\"ui celled table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Ingredient</th>\r\n                  <th>Measure</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {props.ingredients.map(ingredient => {\r\n                  return (\r\n                    <tr key={ingredient}>\r\n                      <td data-label=\"Ingredient\">{ingredient[0]}</td>\r\n                      <td data-labe=\"Measure\">{ingredient[1]}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"sixteen column row\">\r\n          {props.tags\r\n            ? props.tags.split(\",\").map(tag => {\r\n                return (\r\n                  <div className=\"column\" key={tag}>\r\n                    <div className=\"ui label\">{tag}</div>\r\n                  </div>\r\n                );\r\n              })\r\n            : null}\r\n        </div>\r\n\r\n        <div className=\"one column row\">\r\n          <div className=\"column\">\r\n            <h4 className=\"ui heading\">Instructions</h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"one column row\">\r\n          <div className=\"column\">\r\n            <p>{props.instructions}</p>\r\n          </div>\r\n        </div>\r\n\r\n        {props.youtube ? (\r\n          <div className=\"one column row\">\r\n            <div className=\"column\">\r\n              <h4 className=\"ui heading\">Video Instructions:</h4>\r\n              <a href={props.youtube}>Link</a>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ randomMeal }) => {\r\n  const ingredients = [];\r\n  for (let i = 1; i < 21; i++) {\r\n    if (randomMeal[\"strIngredient\" + i]) {\r\n      ingredients.push([\r\n        randomMeal[\"strIngredient\" + i],\r\n        randomMeal[\"strMeasure\" + i]\r\n      ]);\r\n    }\r\n  }\r\n  return {\r\n    title: randomMeal.strMeal,\r\n    category: randomMeal.strCategory,\r\n    area: randomMeal.strArea,\r\n    thumbnail: randomMeal.strMealThumb,\r\n    tags: randomMeal.strTags,\r\n    instructions: randomMeal.strInstructions,\r\n    ingredients: ingredients,\r\n    youtube: randomMeal.strYoutube\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Meal);\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport GetMeal from \"./GetMeal\";\r\nimport Header from \"./Header\";\r\nimport Meal from \"./Meal\";\r\n\r\nconst App = props => {\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"ui container\">\r\n        <Header />\r\n        <GetMeal />\r\n        {props.randomMeal != null ? <Meal /> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ randomMeal }) => {\r\n  return { randomMeal };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\nimport App from \"./Components/App\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}